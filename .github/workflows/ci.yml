name: CI

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

jobs:
  test-backend:
    runs-on: ubuntu-latest
    
    services:
      postgres:
        image: postgres:15
        env:
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: test_saas
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'
    
    - name: Install dependencies
      run: |
        cd backend
        python -m pip install --upgrade pip
        pip install -r requirements.txt
    
    - name: Run linting
      run: |
        cd backend
        flake8 src/ --max-line-length=88 --extend-ignore=E203,W503
        black --check src/
        isort --check-only src/
    
    - name: Run tests
      env:
        DJANGO_SETTINGS_MODULE: src.config.settings
        DB_HOST: localhost
        DB_PORT: 5432
        DB_NAME: test_saas
        DB_USER: postgres
        DB_PASSWORD: postgres
        DJANGO_SECRET_KEY: test-secret-key
        DJANGO_DEBUG: True
        PAYMENTS_PROVIDER: dummy
      run: |
        cd backend
        python manage.py migrate
        python manage.py test src/tests/ --verbosity=2

  test-frontend:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'
        cache-dependency-path: frontend/package-lock.json
    
    - name: Install dependencies
      run: |
        cd frontend
        npm ci
    
    - name: Run linting
      run: |
        cd frontend
        npm run lint
    
    - name: Build
      run: |
        cd frontend
        npm run build 